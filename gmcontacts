#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Std;
use IO::Prompt;
use WWW::Google::Contacts;

my %opts;
getopts('u:p:o:hw', \%opts);

usage() if ($opts{h});

my $username = '';
my $password = '';
my $output = './aliases';

if (-e $output and !$opts{w}) {
    my $overwrite = prompt("File exists, overwrite? [y/n]: ", -yn);

    if (!$overwrite) {
        while(1) {
            my $newoutput = prompt("Enter path for output: ");
            
            unless (-e $newoutput) {
                $output = $newoutput;
                last;
            }
        }
    }
}

$username = $opts{u} if ($opts{u});
$password = $opts{p} if ($opts{p}); 
$output = $opts{o} if ($opts{o}); 

$username = prompt("gmail username: ") if ($username eq '');
$password = prompt("gmail password: ", -e => '*') if ($password eq '');

# now we're ready to go in theory.
my $google = WWW::Google::Contacts->new( username => "$username", password => "$password" );
my $contacts = $google->contacts;

my %tree;

while (my $c = $contacts->next) {
    if ($c->email and $c->full_name) {
        # we have an email here
        # and it has a valid full name!

        foreach my $email (@{$c->email}) {
            push(@{$tree{$c->full_name}}, $email->value);
        }

    }
}

open(FILE, '>'.$output);

# now loop through tree and write aliases.
foreach my $full_name (keys %tree) {

    my $nickname = $full_name;
    $nickname =~ s/ /_/g;

    print FILE "alias ".$nickname." ".$full_name;

    foreach my $email (@{$tree{$full_name}}) {
        print FILE " <".$email.">";
    }

    print FILE "\n";

}

close(FILE);
print "aliases written to ".$output."\n";

sub usage {
    print "usage: gmcontacts <options>\n";
    print "   -u USERNAME         set the gmail username\n";
    print "   -p PASSWORD         set the gmail password\n";
    print "   -w                  don't ask, just write.\n";
    print "   -o PATH             set output path\n";
    print "   -h                  show this help\n";

    exit;
}
